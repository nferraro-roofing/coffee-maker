<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.roofing</groupId>
    <artifactId>coffee-maker</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Coffee Maker</name>
    <description>
        JAR that mimics a coffee maker. Inspired by Uncle Bob's original 
        coffee maker problem: https://flylib.com/books/en/4.444.1.119/1/
    </description>
    <inceptionYear>2022</inceptionYear>
    <url>https://github.com/nferraro-roofing/coffee-maker</url>

    <developers>
        <developer>
            <id>nferraro-roofing</id>
            <name>Nicholas Ferraro</name>
            <email>nick.g.ferraro@gmail.com</email>
            <url>https://github.com/nferraro-roofing</url>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
            <timezone>America/New_York</timezone>
            <properties>
                <picUrl>me.jpg</picUrl>
            </properties>
        </developer>
    </developers>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/nferraro-roofing/coffee-maker/issues</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>

        <maven.javadoc.plugin.version>3.3.2</maven.javadoc.plugin.version>
        <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
        <jacoco.version>0.8.7</jacoco.version>  

        <junit.version>5.8.2</junit.version>

        <lombok.outputDirectory>${project.build.directory}/generated-sources/delombok</lombok.outputDirectory>
    </properties>

    <dependencies>
        <!-- 
            Logging. slf4j-api present at build scope with logback in test scope. 
            This strategy enables apps using this library may provide their own 
            implementation while still enabling logging during test-time.
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency> 
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.10</version>
            <scope>test</scope>
        </dependency>

        <!-- Provided dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
            <scope>provided</scope>
        </dependency>

        <!-- Non-logging related, test-scoped dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 
                Site plugin. Default version is 3.3, but that version appears to have
                an odd NoClassDefFound exceptio - seemingly on every run of "mvn site".
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.8.2</version>
            </plugin>

            <!-- 
                Surefire plugin (unit tests). Default version is 2.12.4, but that 
                version appears to dislike Junit5 (or some other issue), and ends
                up ignores all tests. This version recifies the issue.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>

            <!-- 
                The maven-wrapper-plugin is not bound to any goal, so it only runs via 
                mvn wrapper:wrapper. Maven must be installed on the local machine runsning
                this command. Do not run this unless changing the maven version that
                builds this project. Google "Maven Wrapper" for more information.
            -->
            <plugin> 
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-wrapper-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>

            <!-- General maven build related plugins - e.g. compiler version -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                    <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 
                Javadoc related. Delombok is necessary for the javadoc plugin to function correctly.
            -->
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>1.18.20.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
                    <addOutputDirectory>false</addOutputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <sourcepath>${lombok.outputDirectory}</sourcepath>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                </executions>
            </plugin>
            <plugin> <!-- jacoco enforces test coverage and enables reporting it in our site -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.90</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <scmBranch>gh-pages</scmBranch>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <sourcepath>${project.basedir}/src/main/java</sourcepath>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                             <!-- 
                                Do not re-generate javadocs unecessarily. We already
                                generate the javadoc in the <build> section above. 
                                See: https://maven.apache.org/plugins/maven-javadoc-plugin/examples/aggregate-nofork.html
                             -->
                            <report>aggregate-no-fork</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.1.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                             <!-- 
                                Do not re-attach source unecessarily. We already
                                generate the javadoc in the <build> section above.
                                See: https://maven.apache.org/jxr/maven-jxr-plugin/examples/nofork.html
                             -->
                            <report>jxr-no-fork</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
               <version>${maven.surefire.plugin.version}</version>
            </plugin>

            <!--
                This project does not explicitly require this plugin, but maven was
                displaying a warning about a missing version. Likely some transitive
                plugin-depdendency issue, or maybe some oversight in-built to maven.
                In any case, the version maven was resolving was 3.2.1, so explicitly
                declare that version here. As far as why explicit version declarations
                are prefereed, see: 
                https://stackoverflow.com/questions/17239394/maven-plugin-version-not-specified
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.2.1</version>
            </plugin>
        </plugins>
    </reporting>

    <distributionManagement>
        <downloadUrl>https://github.com/nferraro-roofing/coffee-maker/packages</downloadUrl>

        <repository>
            <id>github</id>
            <name>GitHub Packages</name>
            <url>https://maven.pkg.github.com/nferraro-roofing/coffee-maker</url>
        </repository>

        <site>
            <id>github</id>
            <name>GitHub Packages</name>
            <url>scm:gitgit@github.com:nferraro-roofing/coffee-maker.git</url>
        </site>
    </distributionManagement>
</project>