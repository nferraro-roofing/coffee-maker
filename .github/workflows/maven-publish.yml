# This workflow will build a package using Maven and then publish it to GitHub packages when code is pushed to branch 'main'
# Then, it will also build the site contents and publish those to the gh-pages branch.

name: Maven Build & Publish

on:
  push:
    branches:    
      - 'main'

jobs:
  build-and-publish:

    runs-on: ubuntu-latest
    permissions:
      contents: write # Require write so the maven-scm-plugin can write new site contents
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build & deploy with Maven # mvn deploy will run preceeding goals - test, compile, pacakge, etc
      run: |
         chmod -v a+x $GITHUB_WORKSPACE/mvnw # Allow execute permissions on mvnw script for all users
         $GITHUB_WORKSPACE/mvnw -B deploy --file pom.xml -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        
    - name: Create & publish site
      run: |
         # The following two git configs enable usage of HTTPS urls for git in this workflow
         
         # Git requires a user.name or user.email. We use user.name + the $GITHUB_ACTOR in order
         # to provide a 100% dynamic configuration rather than hard-coding a user or email.
         git config --global user.name $GITHUB_ACTOR
         
         # Pragmatically provide user/password via ${username}:${password} syntax  
         git config --global url."https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/".pushInsteadOf "https://github.com/"
         
         $GITHUB_WORKSPACE/mvnw site
         $GITHUB_WORKSPACE/mvnw site:stage scm-publish:publish-scm
      env:
        GITHUB_TOKEN: ${{ github.token }}